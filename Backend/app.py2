from flask import Flask, request, jsonify
from flask_sqlalchemy import SQLAlchemy

app = Flask(__name__)

# Configuration de la base de données
app.config['SQLALCHEMY_DATABASE_URI'] = 'postgresql://username:password@localhost/petmatch'
app.config['SQLALCHEMY_TRACK_MODIFICATIONS'] = False
db = SQLAlchemy(app)

# Modèle de base de données pour les animaux
class Pet(db.Model):
    id = db.Column(db.Integer, primary_key=True)
    name = db.Column(db.String(255), nullable=False)
    species = db.Column(db.String(255), nullable=False)
    breed = db.Column(db.String(255))
    age = db.Column(db.Integer)
    location = db.Column(db.String(255))
    description = db.Column(db.Text)

    def __repr__(self):
        return f"<Pet {self.name}>"

# Route pour récupérer tous les animaux
@app.route('/pets', methods=['GET'])
def get_pets():
    pets = Pet.query.all()
    return jsonify([{
        'id': pet.id,
        'name': pet.name,
        'species': pet.species,
        'breed': pet.breed,
        'age': pet.age,
        'location': pet.location,
        'description': pet.description
    } for pet in pets])

# Route pour ajouter un nouvel animal
@app.route('/pets', methods=['POST'])
def add_pet():
    data = request.get_json()
    new_pet = Pet(
        name=data['name'],
        species=data['species'],
        breed=data.get('breed', ''),
        age=data.get('age', None),
        location=data['location'],
        description=data.get('description', '')
    )
    db.session.add(new_pet)
    db.session.commit()
    return jsonify({'message': 'Pet added successfully'}), 201

if __name__ == '__main__':
    app.run(debug=True)
